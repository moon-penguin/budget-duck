name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  validate:
    name: Validierung
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Respository
        uses: actions/checkout@v4

      - name: Node.js Setup
        uses: actions/checkout@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Abhängigkeiten installieren
        run: npm ci

      - name: Linting Prüfung
        run: npm run lint

      - name: Format Prüfung
        run: npm run format:check

      - name: Prisma generieren
        run: npx prisma generate

      - name: Prisma Migrationen anwenden
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb

      - name: Build Anwendung
        run: npm run build

      - name: Integrationstests
        run: npm run test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key
          NODE_ENV: test
